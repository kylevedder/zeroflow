#!/usr/bin/env python3
from pathlib import Path

job_dir = Path() / 'job_dir'
assert job_dir.exists(), f"Job dir {job_dir} does not exist"
# Grab all the job logs
job_logs = sorted(job_dir.glob('*/'))


def load_job(job_folder: Path):
    folder_name = job_folder.name
    command_file = job_folder / 'command.sh'
    if not command_file.exists():
        return None
    assert command_file.exists(), f"Command file {command_file} does not exist"
    # read the command file lines
    with open(command_file, 'r') as f:
        lines = f.readlines()
    # Grab the command 
    command = lines[1].strip()
    return {'folder_name': folder_name, 'command': command}


def get_max_len_keys(dicts):
    max_len = {}
    for d in dicts:
        for k in d.keys():
            if k not in max_len:
                max_len[k] = 0
            max_len[k] = max(max_len[k], len(str(d[k])))
    return max_len


# Load all the jobs
jobs = [load_job(job) for job in job_logs]
# Filter out the jobs that failed to load
jobs = [job for job in jobs if job is not None]
# Get the max length of each key
max_len = get_max_len_keys(jobs)
# Print the jobs in a table format

for job in jobs:
    total_len = sum(max_len.values()) + 2 * len(max_len) + 5
    print(f"{'-' * total_len}")
    print("| ", end='')
    for k, v in job.items():
        print(v.ljust(max_len[k] + 2), end='| ')
    print()
